// ------------------------------------------
// bi app mixins
// authors:
// twitter.com/anasnakawa
// twitter.com/victorzamfir
// licensed under the MIT license
// http://www.opensource.org/licenses/mit-license.php
// ------------------------------------------

// ------------------------------------------
// Table of contents
// ------------------------------------------
// padding
// margin
// float
// text align
// clear
// left / right
// border
//  - width
//  - style
//  - color
//  - generic
//  - radius
// ltr / rtl contents
// ------------------------------------------

// generic mixin for properties with values
// (top right bottom left)
// ------------------------------------------
@mixin compact($property, $top, $right, $bottom, $left) {
  @if $bi-app-direction == ltr {
    #{$property}: $top $right $bottom $left;
  } @else {
    #{$property}: $top $left $bottom $right;
  }
}

// padding
// ------------------------------------------
@mixin padding-left($distance) {
  padding-#{$bi-app-left}: $distance;
}

@mixin padding-right($distance) {
  padding-#{$bi-app-right}: $distance;
}

@mixin padding($top, $right, $bottom, $left) {
  @include compact(padding, $top, $right, $bottom, $left);
}

// margin
// ------------------------------------------
@mixin margin-left($distance) {
  margin-#{$bi-app-left}: $distance;
}

@mixin margin-right($distance) {
  margin-#{$bi-app-right}: $distance;
}

@mixin margin($top, $right, $bottom, $left) {
  @include compact(margin, $top, $right, $bottom, $left);
}

// float
// ------------------------------------------
@mixin float-left($important: '') {
  float: $bi-app-left unquote($important);
}

@mixin float-right($important: '') {
  float: $bi-app-right unquote($important);
}

@mixin float($direction, $important: '') {
  @if $direction == left {
    @include float-left($important);
  } @else if $direction == right {
    @include float-right($important);
  } @else {
    float: $direction;
  }
}

// text align
// ------------------------------------------
@mixin text-align-left {
  text-align: $bi-app-left;
}

@mixin text-align-right {
  text-align: $bi-app-right;
}

@mixin text-align($direction) {
  @if $direction == left {
    @include text-align-left;
  } @else if $direction == right {
    @include text-align-right;
  } @else {
    text-align: $direction;
  }
}

// clear
// ------------------------------------------
@mixin clear-left {
  clear: $bi-app-left;
}

@mixin clear-right {
  clear: $bi-app-right;
}

@mixin clear($direction) {
  @if $direction == left {
    @include clear-left;
  } @else if $direction == right {
    @include clear-right;
  } @else {
    clear: $direction;
  }
}

// left / right
// ------------------------------------------
@mixin left($distance) {
  @if $bi-app-direction == ltr {
    left: $distance;
  } @else if $bi-app-direction == rtl {
    right: $distance;
  }
}

@mixin right($distance) {
  @if $bi-app-direction == ltr {
    right: $distance;
  } @else if $bi-app-direction == rtl {
    left: $distance;
  }
}

// border
// ------------------------------------------

// width
@mixin border-left-width($width) {
  border-#{$bi-app-left}-width: $width;
}

@mixin border-right-width($width) {
  border-#{$bi-app-right}-width: $width;
}

@mixin border-width($top, $right, $bottom, $left) {
  @include compact(border-width, $top, $right, $bottom, $left);
}

// style
@mixin border-left-style($style) {
  border-#{$bi-app-left}-style: $style;
}

@mixin border-right-style($style) {
  border-#{$bi-app-right}-style: $style;
}

@mixin border-style($top, $right, $bottom, $left) {
  @include compact(border-style, $top, $right, $bottom, $left);
}

// color
@mixin border-left-color($color) {
  border-#{$bi-app-left}-color: $color;
}

@mixin border-right-color($color) {
  border-#{$bi-app-right}-color: $color;
}

@mixin border-color($top, $right, $bottom, $left) {
  @include compact(border-color, $top, $right, $bottom, $left);
}

// generic
@mixin border-left($border-style) {
  border-#{$bi-app-left}: $border-style;
}

@mixin border-right($border-style) {
  border-#{$bi-app-right}: $border-style;
}

// radius
@mixin border-top-left-radius($radius) {
  -webkit-border-top-#{$bi-app-left}-radius: $radius;
     -moz-border-top-#{$bi-app-left}-radius: $radius;
          border-top-#{$bi-app-left}-radius: $radius;
}

@mixin border-top-right-radius($radius) {
  -webkit-border-top-#{$bi-app-right}-radius: $radius;
     -moz-border-top-#{$bi-app-right}-radius: $radius;
          border-top-#{$bi-app-right}-radius: $radius;
}

@mixin border-bottom-left-radius($radius) {
  -webkit-border-bottom-#{$bi-app-left}-radius: $radius;
     -moz-border-bottom-#{$bi-app-left}-radius: $radius;
          border-bottom-#{$bi-app-left}-radius: $radius;
}

@mixin border-bottom-right-radius($radius) {
  -webkit-border-bottom-#{$bi-app-right}-radius: $radius;
     -moz-border-bottom-#{$bi-app-right}-radius: $radius;
          border-bottom-#{$bi-app-right}-radius: $radius;
}

@mixin border-right-radius($radius) {
  @include border-top-right-radius($radius);
  @include border-bottom-right-radius($radius);
}

@mixin border-left-radius($radius) {
  @include border-top-left-radius($radius);
  @include border-bottom-left-radius($radius);
}

@mixin border-top-radius($radius) {
  @include border-top-left-radius($radius);
  @include border-top-right-radius($radius);
}

@mixin border-bottom-radius($radius) {
  @include border-bottom-left-radius($radius);
  @include border-bottom-right-radius($radius);
}

@mixin border-radius($top-left, $top-right: null, $bottom-right: null, $bottom-left: null) {
  @if $top-right != null {
    @include border-top-left-radius($top-left);
    @include border-top-right-radius($top-right);
    @include border-bottom-right-radius($bottom-right);
    @include border-bottom-left-radius($bottom-left);
  } @else {
    -webkit-border-radius: $top-left;
       -moz-border-radius: $top-left;
        -ms-border-radius: $top-left;
         -o-border-radius: $top-left;
            border-radius: $top-left;
  }
}

// Returns "en" or "ar", useful for image suffixes.
// Usage: background-image: url(/img/header-#{lang()}.png);
@function lang() {
  @if $bi-app-direction == ltr {
    @return 'en';
  } @else {
    @return 'ar';
  }
}

// Support for "direction" declaration (renders ltr/rtl).
// Useful for form elements as they swap the text-indent property and align the text accordingly.
@mixin direction {
  direction: $bi-app-direction;
}

// Inverts a percentage value. Example: 97% becames 3%.
// Useful for background-position.
@function invert-percentage($percentage) {
  @if $bi-app-direction == rtl {
    @return 100% - $percentage;
  } @else {
    @return $percentage;
  }
}

// ltr / rtl contents
// ------------------------------------------
@mixin ltr {
  @if $bi-app-direction == ltr {
    @content;
  }
}

@mixin rtl {
  @if $bi-app-direction == rtl {
    @content;
  }
}
